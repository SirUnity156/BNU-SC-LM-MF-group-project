#BlueJ class context
comment0.target=Player
comment0.text=TODO\ change\ remainingJump\ decrement\r\n\ TODO\ fix\ bug\ where\ you\ can't\ counter\ strafe\ in\ air\r\n
comment1.params=xSize\ ySize\ worldGravity
comment1.target=Player(int,\ int,\ double)
comment1.text=Players\ constructor\ applying\ size\ and\ world\ values
comment10.params=path
comment10.target=greenfoot.GreenfootImage\ formatImage(java.lang.String)
comment10.text=Sets\ image\ size\ to\ player\ size
comment11.params=
comment11.target=void\ getInputs()
comment11.text=Takes\ user's\ inputs\ and\ saves\ them
comment12.params=
comment12.target=void\ applyInputs()
comment12.text=Performs\ actions\ based\ on\ user\ inputs
comment13.params=
comment13.target=void\ interact()
comment13.text=Removes\ platforms\ is\ the\ player\ has\ collected\ enough\ coins
comment14.params=
comment14.target=void\ applyHorizontalInput()
comment14.text=\r\n\ Takes\ values\ of\ pressing\ left/right\ and\ updates\ values\ accordingly\r\n\ If\ left/right\ are\ not\ pressed\ or\ both\ are\ pressed,\ friction\ is\ applied\r\n\ If\ the\ opposite\ direction\ is\ pressed\ to\ the\ current\ movement,\ friction\ is\r\n\ increased\r\n
comment15.params=
comment15.target=void\ applyJumpInput()
comment15.text=Applies\ jump\ velocity\ if\ certain\ conditions\ are\ met
comment16.params=
comment16.target=void\ applyMovement()
comment16.text=Updates\ player\ position
comment17.params=
comment17.target=void\ checkCollision()
comment17.text=Checks\ for\ everything\ that\ the\ player\ could\ collide\ with
comment18.params=
comment18.target=void\ checkEnemyCollision()
comment18.text=\r\n\ Checks\ if\ the\ player\ is\ colliding\ with\ any\ enemies\r\n\ If\ the\ player\ is\ touching\ any\ enemies,\ the\ damage\ of\ the\ most\ damaging\ enemy\r\n\ is\ applied\ to\ the\ player\r\n
comment19.params=
comment19.target=void\ checkPlatformCollision()
comment19.text=\r\n\ Checks\ if\ the\ player\ intersects\ with\ a\ platform\ and\ moves\ them\ outside\ the\r\n\ platform\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=Called\ every\ tick
comment20.params=
comment20.target=void\ checkIfGrounded()
comment20.text=Checks\ if\ any\ platforms\ exist\ directly\ below\ the\ player
comment21.params=
comment21.target=void\ checkIfTouchingLeftWall()
comment22.params=
comment22.target=void\ checkIfTouchingRightWall()
comment23.params=
comment23.target=void\ checkHazardCollision()
comment23.text=\r\n\ Checks\ if\ player\ is\ touching\ any\ environmental\ hazards\r\n\ If\ the\ player\ is\ intersecting\ with\ a\ hazard,\ the\ damage\ of\ the\ most\ damaging\r\n\ hazard\ is\ applied\r\n
comment24.params=multiplier
comment24.target=void\ applyFriction(double)
comment24.text=Decreases\ player\ velocity
comment25.params=
comment25.target=void\ applyGravity()
comment25.text=Applies\ gravity\ acceleration\ if\ not\ grounded
comment26.params=
comment26.target=double\ getXVel()
comment26.text=Returns\ xVel
comment27.params=
comment27.target=double\ getYVel()
comment27.text=Returns\ yVel
comment28.params=
comment28.target=int\ getHealth()
comment28.text=Returns\ health
comment29.params=newHealth
comment29.target=void\ setHealth(int)
comment29.text=Sets\ health\ to\ specified\ value
comment3.params=
comment3.target=void\ checkGameOver()
comment3.text=Checks\ if\ the\ game\ should\ end\ and\ sets\ the\ world\ to\ the\ game\ over\ world
comment4.params=
comment4.target=void\ updateTimers()
comment4.text=Updates\ the\ timers\ by\ a\ tick
comment5.params=duration
comment5.target=void\ setInvincibilityFrames(int)
comment6.params=platform\ buffer
comment6.target=boolean\ isOverlappingPlatform(Platform,\ int)
comment6.text=\r\n\ Detects\ if\ the\ user\ is\ overlapping\ another\ platform\r\n\ Used\ instead\ of\ isIntersecting\ due\ to\ minor\ changes\ in\ where\ values\ are\r\n\ calculated\ from\r\n
comment7.params=platform\ buffer
comment7.target=boolean\ isXOverlappingPlatform(Platform,\ int)
comment7.text=\r\n\ Detects\ if\ the\ x\ coords\ of\ the\ user\ overlaps\ withe\ the\ x\ coords\ of\ the\r\n\ platform\r\n
comment8.params=platform\ buffer
comment8.target=boolean\ isYOverlappingPlatform(Platform,\ int)
comment8.text=\r\n\ Detects\ if\ the\ y\ coords\ of\ the\ user\ overlaps\ withe\ the\ y\ coords\ of\ the\r\n\ platform\r\n
comment9.params=buffer
comment9.target=java.util.List\ getOverlappingPlatforms(int)
numComments=30
